# Generated by Django 5.2.6 on 2025-09-18 20:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SocialPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("instagram", "Instagram"),
                            ("tiktok", "TikTok"),
                            ("youtube", "YouTube"),
                            ("linkedin", "LinkedIn"),
                            ("twitter", "Twitter/X"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                (
                    "icon_class",
                    models.CharField(
                        help_text="CSS class for platform icon", max_length=100
                    ),
                ),
                (
                    "color_class",
                    models.CharField(
                        help_text="CSS class for platform color", max_length=100
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("oauth_client_id", models.CharField(blank=True, max_length=255)),
                ("oauth_client_secret", models.CharField(blank=True, max_length=255)),
                ("oauth_authorization_url", models.URLField(blank=True)),
                ("oauth_token_url", models.URLField(blank=True)),
                (
                    "oauth_scope",
                    models.TextField(blank=True, help_text="Comma-separated scopes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Social Platform",
                "verbose_name_plural": "Social Platforms",
                "db_table": "social_platforms",
            },
        ),
        migrations.CreateModel(
            name="SocialPostTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "template_content",
                    models.JSONField(help_text="Platform-specific template structure"),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_platforms.socialplatform",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Social Post Template",
                "verbose_name_plural": "Social Post Templates",
                "db_table": "social_post_templates",
                "unique_together": {("user", "platform", "name")},
            },
        ),
        migrations.CreateModel(
            name="UserSocialAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform_user_id",
                    models.CharField(
                        help_text="User ID on the social platform", max_length=255
                    ),
                ),
                ("platform_username", models.CharField(blank=True, max_length=255)),
                ("platform_display_name", models.CharField(blank=True, max_length=255)),
                ("profile_picture_url", models.URLField(blank=True)),
                ("access_token", models.TextField(help_text="Encrypted access token")),
                (
                    "refresh_token",
                    models.TextField(blank=True, help_text="Encrypted refresh token"),
                ),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("connected", "Connected"),
                            ("expired", "Token Expired"),
                            ("revoked", "Access Revoked"),
                            ("error", "Connection Error"),
                        ],
                        default="connected",
                        max_length=20,
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict, help_text="Platform-specific permissions"
                    ),
                ),
                ("oauth_state", models.CharField(blank=True, max_length=255)),
                ("oauth_code_verifier", models.CharField(blank=True, max_length=255)),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_platforms.socialplatform",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Social Account",
                "verbose_name_plural": "User Social Accounts",
                "db_table": "user_social_accounts",
                "indexes": [
                    models.Index(
                        fields=["user", "platform"],
                        name="user_social_user_id_520fdf_idx",
                    ),
                    models.Index(
                        fields=["status"], name="user_social_status_057443_idx"
                    ),
                ],
                "unique_together": {("user", "platform", "platform_user_id")},
            },
        ),
    ]
